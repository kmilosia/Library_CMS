//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Employee_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Address), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Employee), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_User_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Address), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.User), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Publication_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Author), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Publication), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Borrowing_BorrowingStatus", "BorrowingStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.BorrowingStatus), "Borrowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Borrowing), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Borrowing_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Employee), "Borrowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Borrowing), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Borrowing_Publication", "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Publication), "Borrowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Borrowing), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Borrowing_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.User), "Borrowing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Borrowing), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_OverdueCharge_Borrowing", "Borrowing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Borrowing), "OverdueCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.OverdueCharge), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Publication_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Category), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Publication), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Employee_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Contact), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Employee), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_User_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Contact), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.User), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Employee_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Gender), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Employee), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Employee_Position", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Position), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Employee), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_OverdueCharge_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Employee), "OverdueCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.OverdueCharge), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_StockAmount_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Employee), "StockAmount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.StockAmount), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_User_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Gender), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.User), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Publication_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Location), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Publication), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentMethod", "PaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.PaymentMethod), "OverdueCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.OverdueCharge), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentStatus", "PaymentStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.PaymentStatus), "OverdueCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.OverdueCharge), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_OverdueCharge_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.User), "OverdueCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.OverdueCharge), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Publication_Publisher", "Publisher", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Publisher), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Publication), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_Publication_Subcategory", "Subcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Subcategory), "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.Publication), true)]
[assembly: EdmRelationshipAttribute("LibraryIMSModel", "FK_StockAmount_Publication", "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Library_Management_System.Models.Entities.Publication), "StockAmount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Library_Management_System.Models.Entities.StockAmount), true)]

#endregion

namespace Library_Management_System.Models.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LibraryIMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LibraryIMSEntities object using the connection string found in the 'LibraryIMSEntities' section of the application configuration file.
        /// </summary>
        public LibraryIMSEntities() : base("name=LibraryIMSEntities", "LibraryIMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryIMSEntities object.
        /// </summary>
        public LibraryIMSEntities(string connectionString) : base(connectionString, "LibraryIMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LibraryIMSEntities object.
        /// </summary>
        public LibraryIMSEntities(EntityConnection connection) : base(connection, "LibraryIMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Address
        {
            get
            {
                if ((_Address == null))
                {
                    _Address = base.CreateObjectSet<Address>("Address");
                }
                return _Address;
            }
        }
        private ObjectSet<Address> _Address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Author
        {
            get
            {
                if ((_Author == null))
                {
                    _Author = base.CreateObjectSet<Author>("Author");
                }
                return _Author;
            }
        }
        private ObjectSet<Author> _Author;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Borrowing> Borrowing
        {
            get
            {
                if ((_Borrowing == null))
                {
                    _Borrowing = base.CreateObjectSet<Borrowing>("Borrowing");
                }
                return _Borrowing;
            }
        }
        private ObjectSet<Borrowing> _Borrowing;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BorrowingStatus> BorrowingStatus
        {
            get
            {
                if ((_BorrowingStatus == null))
                {
                    _BorrowingStatus = base.CreateObjectSet<BorrowingStatus>("BorrowingStatus");
                }
                return _BorrowingStatus;
            }
        }
        private ObjectSet<BorrowingStatus> _BorrowingStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contact
        {
            get
            {
                if ((_Contact == null))
                {
                    _Contact = base.CreateObjectSet<Contact>("Contact");
                }
                return _Contact;
            }
        }
        private ObjectSet<Contact> _Contact;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyRate> DailyRate
        {
            get
            {
                if ((_DailyRate == null))
                {
                    _DailyRate = base.CreateObjectSet<DailyRate>("DailyRate");
                }
                return _DailyRate;
            }
        }
        private ObjectSet<DailyRate> _DailyRate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Gender
        {
            get
            {
                if ((_Gender == null))
                {
                    _Gender = base.CreateObjectSet<Gender>("Gender");
                }
                return _Gender;
            }
        }
        private ObjectSet<Gender> _Gender;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Location
        {
            get
            {
                if ((_Location == null))
                {
                    _Location = base.CreateObjectSet<Location>("Location");
                }
                return _Location;
            }
        }
        private ObjectSet<Location> _Location;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OverdueCharge> OverdueCharge
        {
            get
            {
                if ((_OverdueCharge == null))
                {
                    _OverdueCharge = base.CreateObjectSet<OverdueCharge>("OverdueCharge");
                }
                return _OverdueCharge;
            }
        }
        private ObjectSet<OverdueCharge> _OverdueCharge;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethod> PaymentMethod
        {
            get
            {
                if ((_PaymentMethod == null))
                {
                    _PaymentMethod = base.CreateObjectSet<PaymentMethod>("PaymentMethod");
                }
                return _PaymentMethod;
            }
        }
        private ObjectSet<PaymentMethod> _PaymentMethod;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentStatus> PaymentStatus
        {
            get
            {
                if ((_PaymentStatus == null))
                {
                    _PaymentStatus = base.CreateObjectSet<PaymentStatus>("PaymentStatus");
                }
                return _PaymentStatus;
            }
        }
        private ObjectSet<PaymentStatus> _PaymentStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Position
        {
            get
            {
                if ((_Position == null))
                {
                    _Position = base.CreateObjectSet<Position>("Position");
                }
                return _Position;
            }
        }
        private ObjectSet<Position> _Position;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Publication> Publication
        {
            get
            {
                if ((_Publication == null))
                {
                    _Publication = base.CreateObjectSet<Publication>("Publication");
                }
                return _Publication;
            }
        }
        private ObjectSet<Publication> _Publication;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Publisher> Publisher
        {
            get
            {
                if ((_Publisher == null))
                {
                    _Publisher = base.CreateObjectSet<Publisher>("Publisher");
                }
                return _Publisher;
            }
        }
        private ObjectSet<Publisher> _Publisher;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockAmount> StockAmount
        {
            get
            {
                if ((_StockAmount == null))
                {
                    _StockAmount = base.CreateObjectSet<StockAmount>("StockAmount");
                }
                return _StockAmount;
            }
        }
        private ObjectSet<StockAmount> _StockAmount;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subcategory> Subcategory
        {
            get
            {
                if ((_Subcategory == null))
                {
                    _Subcategory = base.CreateObjectSet<Subcategory>("Subcategory");
                }
                return _Subcategory;
            }
        }
        private ObjectSet<Subcategory> _Subcategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddress(Address address)
        {
            base.AddObject("Address", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Author EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthor(Author author)
        {
            base.AddObject("Author", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Borrowing EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowing(Borrowing borrowing)
        {
            base.AddObject("Borrowing", borrowing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BorrowingStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBorrowingStatus(BorrowingStatus borrowingStatus)
        {
            base.AddObject("BorrowingStatus", borrowingStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContact(Contact contact)
        {
            base.AddObject("Contact", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyRate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyRate(DailyRate dailyRate)
        {
            base.AddObject("DailyRate", dailyRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gender EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGender(Gender gender)
        {
            base.AddObject("Gender", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Location EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocation(Location location)
        {
            base.AddObject("Location", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OverdueCharge EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOverdueCharge(OverdueCharge overdueCharge)
        {
            base.AddObject("OverdueCharge", overdueCharge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethod EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethod(PaymentMethod paymentMethod)
        {
            base.AddObject("PaymentMethod", paymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentStatus(PaymentStatus paymentStatus)
        {
            base.AddObject("PaymentStatus", paymentStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Position EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosition(Position position)
        {
            base.AddObject("Position", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Publication EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublication(Publication publication)
        {
            base.AddObject("Publication", publication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Publisher EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublisher(Publisher publisher)
        {
            base.AddObject("Publisher", publisher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockAmount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockAmount(StockAmount stockAmount)
        {
            base.AddObject("StockAmount", stockAmount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subcategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubcategory(Subcategory subcategory)
        {
            base.AddObject("Subcategory", subcategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="iDAddress">Initial value of the IDAddress property.</param>
        public static Address CreateAddress(global::System.Int32 iDAddress)
        {
            Address address = new Address();
            address.IDAddress = iDAddress;
            return address;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDAddress
        {
            get
            {
                return _IDAddress;
            }
            set
            {
                if (_IDAddress != value)
                {
                    OnIDAddressChanging(value);
                    ReportPropertyChanging("IDAddress");
                    _IDAddress = StructuralObject.SetValidValue(value, "IDAddress");
                    ReportPropertyChanged("IDAddress");
                    OnIDAddressChanged();
                }
            }
        }
        private global::System.Int32 _IDAddress;
        partial void OnIDAddressChanging(global::System.Int32 value);
        partial void OnIDAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HouseNumber
        {
            get
            {
                return _HouseNumber;
            }
            set
            {
                OnHouseNumberChanging(value);
                ReportPropertyChanging("HouseNumber");
                _HouseNumber = StructuralObject.SetValidValue(value, true, "HouseNumber");
                ReportPropertyChanged("HouseNumber");
                OnHouseNumberChanged();
            }
        }
        private global::System.String _HouseNumber;
        partial void OnHouseNumberChanging(global::System.String value);
        partial void OnHouseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postcode
        {
            get
            {
                return _Postcode;
            }
            set
            {
                OnPostcodeChanging(value);
                ReportPropertyChanging("Postcode");
                _Postcode = StructuralObject.SetValidValue(value, true, "Postcode");
                ReportPropertyChanged("Postcode");
                OnPostcodeChanged();
            }
        }
        private global::System.String _Postcode;
        partial void OnPostcodeChanging(global::System.String value);
        partial void OnPostcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Address", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Address", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Address", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Address", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LibraryIMSModel.FK_User_Address", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LibraryIMSModel.FK_User_Address", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="iDAuthor">Initial value of the IDAuthor property.</param>
        public static Author CreateAuthor(global::System.Int32 iDAuthor)
        {
            Author author = new Author();
            author.IDAuthor = iDAuthor;
            return author;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDAuthor
        {
            get
            {
                return _IDAuthor;
            }
            set
            {
                if (_IDAuthor != value)
                {
                    OnIDAuthorChanging(value);
                    ReportPropertyChanging("IDAuthor");
                    _IDAuthor = StructuralObject.SetValidValue(value, "IDAuthor");
                    ReportPropertyChanged("IDAuthor");
                    OnIDAuthorChanged();
                }
            }
        }
        private global::System.Int32 _IDAuthor;
        partial void OnIDAuthorChanging(global::System.Int32 value);
        partial void OnIDAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Author", "Publication")]
        public EntityCollection<Publication> Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Author", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Author", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Borrowing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Borrowing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Borrowing object.
        /// </summary>
        /// <param name="iDBorrowing">Initial value of the IDBorrowing property.</param>
        public static Borrowing CreateBorrowing(global::System.Int32 iDBorrowing)
        {
            Borrowing borrowing = new Borrowing();
            borrowing.IDBorrowing = iDBorrowing;
            return borrowing;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBorrowing
        {
            get
            {
                return _IDBorrowing;
            }
            set
            {
                if (_IDBorrowing != value)
                {
                    OnIDBorrowingChanging(value);
                    ReportPropertyChanging("IDBorrowing");
                    _IDBorrowing = StructuralObject.SetValidValue(value, "IDBorrowing");
                    ReportPropertyChanged("IDBorrowing");
                    OnIDBorrowingChanged();
                }
            }
        }
        private global::System.Int32 _IDBorrowing;
        partial void OnIDBorrowingChanging(global::System.Int32 value);
        partial void OnIDBorrowingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value, "IDUser");
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private Nullable<global::System.Int32> _IDUser;
        partial void OnIDUserChanging(Nullable<global::System.Int32> value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDEmployee
        {
            get
            {
                return _IDEmployee;
            }
            set
            {
                OnIDEmployeeChanging(value);
                ReportPropertyChanging("IDEmployee");
                _IDEmployee = StructuralObject.SetValidValue(value, "IDEmployee");
                ReportPropertyChanged("IDEmployee");
                OnIDEmployeeChanged();
            }
        }
        private Nullable<global::System.Int32> _IDEmployee;
        partial void OnIDEmployeeChanging(Nullable<global::System.Int32> value);
        partial void OnIDEmployeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPublication
        {
            get
            {
                return _IDPublication;
            }
            set
            {
                OnIDPublicationChanging(value);
                ReportPropertyChanging("IDPublication");
                _IDPublication = StructuralObject.SetValidValue(value, "IDPublication");
                ReportPropertyChanged("IDPublication");
                OnIDPublicationChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPublication;
        partial void OnIDPublicationChanging(Nullable<global::System.Int32> value);
        partial void OnIDPublicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BorrowingDate
        {
            get
            {
                return _BorrowingDate;
            }
            set
            {
                OnBorrowingDateChanging(value);
                ReportPropertyChanging("BorrowingDate");
                _BorrowingDate = StructuralObject.SetValidValue(value, "BorrowingDate");
                ReportPropertyChanged("BorrowingDate");
                OnBorrowingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BorrowingDate;
        partial void OnBorrowingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBorrowingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturningDate
        {
            get
            {
                return _ReturningDate;
            }
            set
            {
                OnReturningDateChanging(value);
                ReportPropertyChanging("ReturningDate");
                _ReturningDate = StructuralObject.SetValidValue(value, "ReturningDate");
                ReportPropertyChanged("ReturningDate");
                OnReturningDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturningDate;
        partial void OnReturningDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReturningDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturningDeadline
        {
            get
            {
                return _ReturningDeadline;
            }
            set
            {
                OnReturningDeadlineChanging(value);
                ReportPropertyChanging("ReturningDeadline");
                _ReturningDeadline = StructuralObject.SetValidValue(value, "ReturningDeadline");
                ReportPropertyChanged("ReturningDeadline");
                OnReturningDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturningDeadline;
        partial void OnReturningDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnReturningDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true, "Remarks");
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDBorrowingStatus
        {
            get
            {
                return _IDBorrowingStatus;
            }
            set
            {
                OnIDBorrowingStatusChanging(value);
                ReportPropertyChanging("IDBorrowingStatus");
                _IDBorrowingStatus = StructuralObject.SetValidValue(value, "IDBorrowingStatus");
                ReportPropertyChanged("IDBorrowingStatus");
                OnIDBorrowingStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _IDBorrowingStatus;
        partial void OnIDBorrowingStatusChanging(Nullable<global::System.Int32> value);
        partial void OnIDBorrowingStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_BorrowingStatus", "BorrowingStatus")]
        public BorrowingStatus BorrowingStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BorrowingStatus>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "BorrowingStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BorrowingStatus>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "BorrowingStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BorrowingStatus> BorrowingStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BorrowingStatus>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "BorrowingStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BorrowingStatus>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "BorrowingStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_Borrowing_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_Borrowing_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_Borrowing_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("LibraryIMSModel.FK_Borrowing_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_Publication", "Publication")]
        public Publication Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_Borrowing_Publication", "Publication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_Borrowing_Publication", "Publication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publication> PublicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_Borrowing_Publication", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publication>("LibraryIMSModel.FK_Borrowing_Publication", "Publication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_Borrowing_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_Borrowing_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_Borrowing_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibraryIMSModel.FK_Borrowing_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_Borrowing", "OverdueCharge")]
        public EntityCollection<OverdueCharge> OverdueCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "OverdueCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "OverdueCharge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="BorrowingStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BorrowingStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BorrowingStatus object.
        /// </summary>
        /// <param name="iDBorrowingStatus">Initial value of the IDBorrowingStatus property.</param>
        public static BorrowingStatus CreateBorrowingStatus(global::System.Int32 iDBorrowingStatus)
        {
            BorrowingStatus borrowingStatus = new BorrowingStatus();
            borrowingStatus.IDBorrowingStatus = iDBorrowingStatus;
            return borrowingStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBorrowingStatus
        {
            get
            {
                return _IDBorrowingStatus;
            }
            set
            {
                if (_IDBorrowingStatus != value)
                {
                    OnIDBorrowingStatusChanging(value);
                    ReportPropertyChanging("IDBorrowingStatus");
                    _IDBorrowingStatus = StructuralObject.SetValidValue(value, "IDBorrowingStatus");
                    ReportPropertyChanged("IDBorrowingStatus");
                    OnIDBorrowingStatusChanged();
                }
            }
        }
        private global::System.Int32 _IDBorrowingStatus;
        partial void OnIDBorrowingStatusChanging(global::System.Int32 value);
        partial void OnIDBorrowingStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_BorrowingStatus", "Borrowing")]
        public EntityCollection<Borrowing> Borrowing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "Borrowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_BorrowingStatus", "Borrowing", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="iDCategory">Initial value of the IDCategory property.</param>
        public static Category CreateCategory(global::System.Int32 iDCategory)
        {
            Category category = new Category();
            category.IDCategory = iDCategory;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCategory
        {
            get
            {
                return _IDCategory;
            }
            set
            {
                if (_IDCategory != value)
                {
                    OnIDCategoryChanging(value);
                    ReportPropertyChanging("IDCategory");
                    _IDCategory = StructuralObject.SetValidValue(value, "IDCategory");
                    ReportPropertyChanged("IDCategory");
                    OnIDCategoryChanged();
                }
            }
        }
        private global::System.Int32 _IDCategory;
        partial void OnIDCategoryChanging(global::System.Int32 value);
        partial void OnIDCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Category", "Publication")]
        public EntityCollection<Publication> Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Category", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Category", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="iDContact">Initial value of the IDContact property.</param>
        public static Contact CreateContact(global::System.Int32 iDContact)
        {
            Contact contact = new Contact();
            contact.IDContact = iDContact;
            return contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDContact
        {
            get
            {
                return _IDContact;
            }
            set
            {
                if (_IDContact != value)
                {
                    OnIDContactChanging(value);
                    ReportPropertyChanging("IDContact");
                    _IDContact = StructuralObject.SetValidValue(value, "IDContact");
                    ReportPropertyChanged("IDContact");
                    OnIDContactChanged();
                }
            }
        }
        private global::System.Int32 _IDContact;
        partial void OnIDContactChanging(global::System.Int32 value);
        partial void OnIDContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Contact", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Contact", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Contact", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Contact", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LibraryIMSModel.FK_User_Contact", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LibraryIMSModel.FK_User_Contact", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="DailyRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyRate object.
        /// </summary>
        /// <param name="iDDailyRate">Initial value of the IDDailyRate property.</param>
        public static DailyRate CreateDailyRate(global::System.Int32 iDDailyRate)
        {
            DailyRate dailyRate = new DailyRate();
            dailyRate.IDDailyRate = iDDailyRate;
            return dailyRate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDDailyRate
        {
            get
            {
                return _IDDailyRate;
            }
            set
            {
                if (_IDDailyRate != value)
                {
                    OnIDDailyRateChanging(value);
                    ReportPropertyChanging("IDDailyRate");
                    _IDDailyRate = StructuralObject.SetValidValue(value, "IDDailyRate");
                    ReportPropertyChanged("IDDailyRate");
                    OnIDDailyRateChanged();
                }
            }
        }
        private global::System.Int32 _IDDailyRate;
        partial void OnIDDailyRateChanging(global::System.Int32 value);
        partial void OnIDDailyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value, "Rate");
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rate;
        partial void OnRateChanging(Nullable<global::System.Decimal> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="iDEmployee">Initial value of the IDEmployee property.</param>
        public static Employee CreateEmployee(global::System.Int32 iDEmployee)
        {
            Employee employee = new Employee();
            employee.IDEmployee = iDEmployee;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDEmployee
        {
            get
            {
                return _IDEmployee;
            }
            set
            {
                if (_IDEmployee != value)
                {
                    OnIDEmployeeChanging(value);
                    ReportPropertyChanging("IDEmployee");
                    _IDEmployee = StructuralObject.SetValidValue(value, "IDEmployee");
                    ReportPropertyChanged("IDEmployee");
                    OnIDEmployeeChanged();
                }
            }
        }
        private global::System.Int32 _IDEmployee;
        partial void OnIDEmployeeChanging(global::System.Int32 value);
        partial void OnIDEmployeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPosition
        {
            get
            {
                return _IDPosition;
            }
            set
            {
                OnIDPositionChanging(value);
                ReportPropertyChanging("IDPosition");
                _IDPosition = StructuralObject.SetValidValue(value, "IDPosition");
                ReportPropertyChanged("IDPosition");
                OnIDPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPosition;
        partial void OnIDPositionChanging(Nullable<global::System.Int32> value);
        partial void OnIDPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDGender
        {
            get
            {
                return _IDGender;
            }
            set
            {
                OnIDGenderChanging(value);
                ReportPropertyChanging("IDGender");
                _IDGender = StructuralObject.SetValidValue(value, "IDGender");
                ReportPropertyChanged("IDGender");
                OnIDGenderChanged();
            }
        }
        private Nullable<global::System.Int32> _IDGender;
        partial void OnIDGenderChanging(Nullable<global::System.Int32> value);
        partial void OnIDGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDContact
        {
            get
            {
                return _IDContact;
            }
            set
            {
                OnIDContactChanging(value);
                ReportPropertyChanging("IDContact");
                _IDContact = StructuralObject.SetValidValue(value, "IDContact");
                ReportPropertyChanged("IDContact");
                OnIDContactChanged();
            }
        }
        private Nullable<global::System.Int32> _IDContact;
        partial void OnIDContactChanging(Nullable<global::System.Int32> value);
        partial void OnIDContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDAddress
        {
            get
            {
                return _IDAddress;
            }
            set
            {
                OnIDAddressChanging(value);
                ReportPropertyChanging("IDAddress");
                _IDAddress = StructuralObject.SetValidValue(value, "IDAddress");
                ReportPropertyChanged("IDAddress");
                OnIDAddressChanged();
            }
        }
        private Nullable<global::System.Int32> _IDAddress;
        partial void OnIDAddressChanging(Nullable<global::System.Int32> value);
        partial void OnIDAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_Employee_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_Employee_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_Employee_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibraryIMSModel.FK_Employee_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_Employee", "Borrowing")]
        public EntityCollection<Borrowing> Borrowing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_Employee", "Borrowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_Employee", "Borrowing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_Employee_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_Employee_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_Employee_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("LibraryIMSModel.FK_Employee_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_Employee_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_Employee_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_Employee_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("LibraryIMSModel.FK_Employee_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("LibraryIMSModel.FK_Employee_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("LibraryIMSModel.FK_Employee_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("LibraryIMSModel.FK_Employee_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("LibraryIMSModel.FK_Employee_Position", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_Employee", "OverdueCharge")]
        public EntityCollection<OverdueCharge> OverdueCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_Employee", "OverdueCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_Employee", "OverdueCharge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_StockAmount_Employee", "StockAmount")]
        public EntityCollection<StockAmount> StockAmount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockAmount>("LibraryIMSModel.FK_StockAmount_Employee", "StockAmount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockAmount>("LibraryIMSModel.FK_StockAmount_Employee", "StockAmount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="iDGender">Initial value of the IDGender property.</param>
        public static Gender CreateGender(global::System.Int32 iDGender)
        {
            Gender gender = new Gender();
            gender.IDGender = iDGender;
            return gender;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDGender
        {
            get
            {
                return _IDGender;
            }
            set
            {
                if (_IDGender != value)
                {
                    OnIDGenderChanging(value);
                    ReportPropertyChanging("IDGender");
                    _IDGender = StructuralObject.SetValidValue(value, "IDGender");
                    ReportPropertyChanged("IDGender");
                    OnIDGenderChanged();
                }
            }
        }
        private global::System.Int32 _IDGender;
        partial void OnIDGenderChanging(global::System.Int32 value);
        partial void OnIDGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Gender", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Gender", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Gender", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Gender", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LibraryIMSModel.FK_User_Gender", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LibraryIMSModel.FK_User_Gender", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="iDLocation">Initial value of the IDLocation property.</param>
        public static Location CreateLocation(global::System.Int32 iDLocation)
        {
            Location location = new Location();
            location.IDLocation = iDLocation;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDLocation
        {
            get
            {
                return _IDLocation;
            }
            set
            {
                if (_IDLocation != value)
                {
                    OnIDLocationChanging(value);
                    ReportPropertyChanging("IDLocation");
                    _IDLocation = StructuralObject.SetValidValue(value, "IDLocation");
                    ReportPropertyChanged("IDLocation");
                    OnIDLocationChanged();
                }
            }
        }
        private global::System.Int32 _IDLocation;
        partial void OnIDLocationChanging(global::System.Int32 value);
        partial void OnIDLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Location", "Publication")]
        public EntityCollection<Publication> Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Location", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Location", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="OverdueCharge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OverdueCharge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OverdueCharge object.
        /// </summary>
        /// <param name="iDOverdueCharge">Initial value of the IDOverdueCharge property.</param>
        public static OverdueCharge CreateOverdueCharge(global::System.Int32 iDOverdueCharge)
        {
            OverdueCharge overdueCharge = new OverdueCharge();
            overdueCharge.IDOverdueCharge = iDOverdueCharge;
            return overdueCharge;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDOverdueCharge
        {
            get
            {
                return _IDOverdueCharge;
            }
            set
            {
                if (_IDOverdueCharge != value)
                {
                    OnIDOverdueChargeChanging(value);
                    ReportPropertyChanging("IDOverdueCharge");
                    _IDOverdueCharge = StructuralObject.SetValidValue(value, "IDOverdueCharge");
                    ReportPropertyChanged("IDOverdueCharge");
                    OnIDOverdueChargeChanged();
                }
            }
        }
        private global::System.Int32 _IDOverdueCharge;
        partial void OnIDOverdueChargeChanging(global::System.Int32 value);
        partial void OnIDOverdueChargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDBorrowing
        {
            get
            {
                return _IDBorrowing;
            }
            set
            {
                OnIDBorrowingChanging(value);
                ReportPropertyChanging("IDBorrowing");
                _IDBorrowing = StructuralObject.SetValidValue(value, "IDBorrowing");
                ReportPropertyChanged("IDBorrowing");
                OnIDBorrowingChanged();
            }
        }
        private Nullable<global::System.Int32> _IDBorrowing;
        partial void OnIDBorrowingChanging(Nullable<global::System.Int32> value);
        partial void OnIDBorrowingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDEmployee
        {
            get
            {
                return _IDEmployee;
            }
            set
            {
                OnIDEmployeeChanging(value);
                ReportPropertyChanging("IDEmployee");
                _IDEmployee = StructuralObject.SetValidValue(value, "IDEmployee");
                ReportPropertyChanged("IDEmployee");
                OnIDEmployeeChanged();
            }
        }
        private Nullable<global::System.Int32> _IDEmployee;
        partial void OnIDEmployeeChanging(Nullable<global::System.Int32> value);
        partial void OnIDEmployeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value, "IDUser");
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private Nullable<global::System.Int32> _IDUser;
        partial void OnIDUserChanging(Nullable<global::System.Int32> value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value, "PaymentAmount");
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPaymentMethod
        {
            get
            {
                return _IDPaymentMethod;
            }
            set
            {
                OnIDPaymentMethodChanging(value);
                ReportPropertyChanging("IDPaymentMethod");
                _IDPaymentMethod = StructuralObject.SetValidValue(value, "IDPaymentMethod");
                ReportPropertyChanged("IDPaymentMethod");
                OnIDPaymentMethodChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPaymentMethod;
        partial void OnIDPaymentMethodChanging(Nullable<global::System.Int32> value);
        partial void OnIDPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPaymentStatus
        {
            get
            {
                return _IDPaymentStatus;
            }
            set
            {
                OnIDPaymentStatusChanging(value);
                ReportPropertyChanging("IDPaymentStatus");
                _IDPaymentStatus = StructuralObject.SetValidValue(value, "IDPaymentStatus");
                ReportPropertyChanged("IDPaymentStatus");
                OnIDPaymentStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPaymentStatus;
        partial void OnIDPaymentStatusChanging(Nullable<global::System.Int32> value);
        partial void OnIDPaymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturnDeadline
        {
            get
            {
                return _ReturnDeadline;
            }
            set
            {
                OnReturnDeadlineChanging(value);
                ReportPropertyChanging("ReturnDeadline");
                _ReturnDeadline = StructuralObject.SetValidValue(value, "ReturnDeadline");
                ReportPropertyChanged("ReturnDeadline");
                OnReturnDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturnDeadline;
        partial void OnReturnDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnReturnDeadlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturnDate
        {
            get
            {
                return _ReturnDate;
            }
            set
            {
                OnReturnDateChanging(value);
                ReportPropertyChanging("ReturnDate");
                _ReturnDate = StructuralObject.SetValidValue(value, "ReturnDate");
                ReportPropertyChanged("ReturnDate");
                OnReturnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturnDate;
        partial void OnReturnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReturnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true, "Remarks");
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_Borrowing", "Borrowing")]
        public Borrowing Borrowing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrowing>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "Borrowing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrowing>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "Borrowing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Borrowing> BorrowingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Borrowing>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "Borrowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Borrowing>("LibraryIMSModel.FK_OverdueCharge_Borrowing", "Borrowing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_OverdueCharge_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_OverdueCharge_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_OverdueCharge_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("LibraryIMSModel.FK_OverdueCharge_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentMethod", "PaymentMethod")]
        public PaymentMethod PaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "PaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "PaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethod> PaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "PaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethod>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "PaymentMethod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentStatus", "PaymentStatus")]
        public PaymentStatus PaymentStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentStatus>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "PaymentStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentStatus>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "PaymentStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentStatus> PaymentStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentStatus>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "PaymentStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentStatus>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "PaymentStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_OverdueCharge_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_OverdueCharge_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LibraryIMSModel.FK_OverdueCharge_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LibraryIMSModel.FK_OverdueCharge_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="PaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentMethod object.
        /// </summary>
        /// <param name="iDPaymentMethod">Initial value of the IDPaymentMethod property.</param>
        public static PaymentMethod CreatePaymentMethod(global::System.Int32 iDPaymentMethod)
        {
            PaymentMethod paymentMethod = new PaymentMethod();
            paymentMethod.IDPaymentMethod = iDPaymentMethod;
            return paymentMethod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPaymentMethod
        {
            get
            {
                return _IDPaymentMethod;
            }
            set
            {
                if (_IDPaymentMethod != value)
                {
                    OnIDPaymentMethodChanging(value);
                    ReportPropertyChanging("IDPaymentMethod");
                    _IDPaymentMethod = StructuralObject.SetValidValue(value, "IDPaymentMethod");
                    ReportPropertyChanged("IDPaymentMethod");
                    OnIDPaymentMethodChanged();
                }
            }
        }
        private global::System.Int32 _IDPaymentMethod;
        partial void OnIDPaymentMethodChanging(global::System.Int32 value);
        partial void OnIDPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentMethod", "OverdueCharge")]
        public EntityCollection<OverdueCharge> OverdueCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "OverdueCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_PaymentMethod", "OverdueCharge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="PaymentStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PaymentStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PaymentStatus object.
        /// </summary>
        /// <param name="iDPaymentStatus">Initial value of the IDPaymentStatus property.</param>
        public static PaymentStatus CreatePaymentStatus(global::System.Int32 iDPaymentStatus)
        {
            PaymentStatus paymentStatus = new PaymentStatus();
            paymentStatus.IDPaymentStatus = iDPaymentStatus;
            return paymentStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPaymentStatus
        {
            get
            {
                return _IDPaymentStatus;
            }
            set
            {
                if (_IDPaymentStatus != value)
                {
                    OnIDPaymentStatusChanging(value);
                    ReportPropertyChanging("IDPaymentStatus");
                    _IDPaymentStatus = StructuralObject.SetValidValue(value, "IDPaymentStatus");
                    ReportPropertyChanged("IDPaymentStatus");
                    OnIDPaymentStatusChanged();
                }
            }
        }
        private global::System.Int32 _IDPaymentStatus;
        partial void OnIDPaymentStatusChanging(global::System.Int32 value);
        partial void OnIDPaymentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_PaymentStatus", "OverdueCharge")]
        public EntityCollection<OverdueCharge> OverdueCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "OverdueCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_PaymentStatus", "OverdueCharge", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="iDPosition">Initial value of the IDPosition property.</param>
        public static Position CreatePosition(global::System.Int32 iDPosition)
        {
            Position position = new Position();
            position.IDPosition = iDPosition;
            return position;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPosition
        {
            get
            {
                return _IDPosition;
            }
            set
            {
                if (_IDPosition != value)
                {
                    OnIDPositionChanging(value);
                    ReportPropertyChanging("IDPosition");
                    _IDPosition = StructuralObject.SetValidValue(value, "IDPosition");
                    ReportPropertyChanged("IDPosition");
                    OnIDPositionChanged();
                }
            }
        }
        private global::System.Int32 _IDPosition;
        partial void OnIDPositionChanging(global::System.Int32 value);
        partial void OnIDPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Employee_Position", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Position", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("LibraryIMSModel.FK_Employee_Position", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Publication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Publication object.
        /// </summary>
        /// <param name="iDPublication">Initial value of the IDPublication property.</param>
        public static Publication CreatePublication(global::System.Int32 iDPublication)
        {
            Publication publication = new Publication();
            publication.IDPublication = iDPublication;
            return publication;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPublication
        {
            get
            {
                return _IDPublication;
            }
            set
            {
                if (_IDPublication != value)
                {
                    OnIDPublicationChanging(value);
                    ReportPropertyChanging("IDPublication");
                    _IDPublication = StructuralObject.SetValidValue(value, "IDPublication");
                    ReportPropertyChanged("IDPublication");
                    OnIDPublicationChanged();
                }
            }
        }
        private global::System.Int32 _IDPublication;
        partial void OnIDPublicationChanging(global::System.Int32 value);
        partial void OnIDPublicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPublisher
        {
            get
            {
                return _IDPublisher;
            }
            set
            {
                OnIDPublisherChanging(value);
                ReportPropertyChanging("IDPublisher");
                _IDPublisher = StructuralObject.SetValidValue(value, "IDPublisher");
                ReportPropertyChanged("IDPublisher");
                OnIDPublisherChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPublisher;
        partial void OnIDPublisherChanging(Nullable<global::System.Int32> value);
        partial void OnIDPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDAuthor
        {
            get
            {
                return _IDAuthor;
            }
            set
            {
                OnIDAuthorChanging(value);
                ReportPropertyChanging("IDAuthor");
                _IDAuthor = StructuralObject.SetValidValue(value, "IDAuthor");
                ReportPropertyChanged("IDAuthor");
                OnIDAuthorChanged();
            }
        }
        private Nullable<global::System.Int32> _IDAuthor;
        partial void OnIDAuthorChanging(Nullable<global::System.Int32> value);
        partial void OnIDAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDCategory
        {
            get
            {
                return _IDCategory;
            }
            set
            {
                OnIDCategoryChanging(value);
                ReportPropertyChanging("IDCategory");
                _IDCategory = StructuralObject.SetValidValue(value, "IDCategory");
                ReportPropertyChanged("IDCategory");
                OnIDCategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _IDCategory;
        partial void OnIDCategoryChanging(Nullable<global::System.Int32> value);
        partial void OnIDCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDSubcategory
        {
            get
            {
                return _IDSubcategory;
            }
            set
            {
                OnIDSubcategoryChanging(value);
                ReportPropertyChanging("IDSubcategory");
                _IDSubcategory = StructuralObject.SetValidValue(value, "IDSubcategory");
                ReportPropertyChanged("IDSubcategory");
                OnIDSubcategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _IDSubcategory;
        partial void OnIDSubcategoryChanging(Nullable<global::System.Int32> value);
        partial void OnIDSubcategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDLocation
        {
            get
            {
                return _IDLocation;
            }
            set
            {
                OnIDLocationChanging(value);
                ReportPropertyChanging("IDLocation");
                _IDLocation = StructuralObject.SetValidValue(value, "IDLocation");
                ReportPropertyChanged("IDLocation");
                OnIDLocationChanged();
            }
        }
        private Nullable<global::System.Int32> _IDLocation;
        partial void OnIDLocationChanging(Nullable<global::System.Int32> value);
        partial void OnIDLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, true, "ISBN");
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublishedYear
        {
            get
            {
                return _PublishedYear;
            }
            set
            {
                OnPublishedYearChanging(value);
                ReportPropertyChanging("PublishedYear");
                _PublishedYear = StructuralObject.SetValidValue(value, true, "PublishedYear");
                ReportPropertyChanged("PublishedYear");
                OnPublishedYearChanged();
            }
        }
        private global::System.String _PublishedYear;
        partial void OnPublishedYearChanging(global::System.String value);
        partial void OnPublishedYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PagesNumber
        {
            get
            {
                return _PagesNumber;
            }
            set
            {
                OnPagesNumberChanging(value);
                ReportPropertyChanging("PagesNumber");
                _PagesNumber = StructuralObject.SetValidValue(value, true, "PagesNumber");
                ReportPropertyChanged("PagesNumber");
                OnPagesNumberChanged();
            }
        }
        private global::System.String _PagesNumber;
        partial void OnPagesNumberChanging(global::System.String value);
        partial void OnPagesNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value, true, "Volume");
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private global::System.String _Volume;
        partial void OnVolumeChanging(global::System.String value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LibraryIMSModel.FK_Publication_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LibraryIMSModel.FK_Publication_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LibraryIMSModel.FK_Publication_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("LibraryIMSModel.FK_Publication_Author", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_Publication", "Borrowing")]
        public EntityCollection<Borrowing> Borrowing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_Publication", "Borrowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_Publication", "Borrowing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LibraryIMSModel.FK_Publication_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LibraryIMSModel.FK_Publication_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("LibraryIMSModel.FK_Publication_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("LibraryIMSModel.FK_Publication_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("LibraryIMSModel.FK_Publication_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("LibraryIMSModel.FK_Publication_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("LibraryIMSModel.FK_Publication_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("LibraryIMSModel.FK_Publication_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Publisher", "Publisher")]
        public Publisher Publisher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("LibraryIMSModel.FK_Publication_Publisher", "Publisher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("LibraryIMSModel.FK_Publication_Publisher", "Publisher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publisher> PublisherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("LibraryIMSModel.FK_Publication_Publisher", "Publisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publisher>("LibraryIMSModel.FK_Publication_Publisher", "Publisher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Subcategory", "Subcategory")]
        public Subcategory Subcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("LibraryIMSModel.FK_Publication_Subcategory", "Subcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("LibraryIMSModel.FK_Publication_Subcategory", "Subcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subcategory> SubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subcategory>("LibraryIMSModel.FK_Publication_Subcategory", "Subcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subcategory>("LibraryIMSModel.FK_Publication_Subcategory", "Subcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_StockAmount_Publication", "StockAmount")]
        public EntityCollection<StockAmount> StockAmount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockAmount>("LibraryIMSModel.FK_StockAmount_Publication", "StockAmount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockAmount>("LibraryIMSModel.FK_StockAmount_Publication", "StockAmount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Publisher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publisher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Publisher object.
        /// </summary>
        /// <param name="iDPublisher">Initial value of the IDPublisher property.</param>
        public static Publisher CreatePublisher(global::System.Int32 iDPublisher)
        {
            Publisher publisher = new Publisher();
            publisher.IDPublisher = iDPublisher;
            return publisher;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDPublisher
        {
            get
            {
                return _IDPublisher;
            }
            set
            {
                if (_IDPublisher != value)
                {
                    OnIDPublisherChanging(value);
                    ReportPropertyChanging("IDPublisher");
                    _IDPublisher = StructuralObject.SetValidValue(value, "IDPublisher");
                    ReportPropertyChanged("IDPublisher");
                    OnIDPublisherChanged();
                }
            }
        }
        private global::System.Int32 _IDPublisher;
        partial void OnIDPublisherChanging(global::System.Int32 value);
        partial void OnIDPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FoundingYear
        {
            get
            {
                return _FoundingYear;
            }
            set
            {
                OnFoundingYearChanging(value);
                ReportPropertyChanging("FoundingYear");
                _FoundingYear = StructuralObject.SetValidValue(value, true, "FoundingYear");
                ReportPropertyChanged("FoundingYear");
                OnFoundingYearChanged();
            }
        }
        private global::System.String _FoundingYear;
        partial void OnFoundingYearChanging(global::System.String value);
        partial void OnFoundingYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Publisher", "Publication")]
        public EntityCollection<Publication> Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Publisher", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Publisher", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="StockAmount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockAmount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockAmount object.
        /// </summary>
        /// <param name="iDStockAmount">Initial value of the IDStockAmount property.</param>
        public static StockAmount CreateStockAmount(global::System.Int32 iDStockAmount)
        {
            StockAmount stockAmount = new StockAmount();
            stockAmount.IDStockAmount = iDStockAmount;
            return stockAmount;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDStockAmount
        {
            get
            {
                return _IDStockAmount;
            }
            set
            {
                if (_IDStockAmount != value)
                {
                    OnIDStockAmountChanging(value);
                    ReportPropertyChanging("IDStockAmount");
                    _IDStockAmount = StructuralObject.SetValidValue(value, "IDStockAmount");
                    ReportPropertyChanged("IDStockAmount");
                    OnIDStockAmountChanged();
                }
            }
        }
        private global::System.Int32 _IDStockAmount;
        partial void OnIDStockAmountChanging(global::System.Int32 value);
        partial void OnIDStockAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDPublication
        {
            get
            {
                return _IDPublication;
            }
            set
            {
                OnIDPublicationChanging(value);
                ReportPropertyChanging("IDPublication");
                _IDPublication = StructuralObject.SetValidValue(value, "IDPublication");
                ReportPropertyChanged("IDPublication");
                OnIDPublicationChanged();
            }
        }
        private Nullable<global::System.Int32> _IDPublication;
        partial void OnIDPublicationChanging(Nullable<global::System.Int32> value);
        partial void OnIDPublicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BorrowedAmount
        {
            get
            {
                return _BorrowedAmount;
            }
            set
            {
                OnBorrowedAmountChanging(value);
                ReportPropertyChanging("BorrowedAmount");
                _BorrowedAmount = StructuralObject.SetValidValue(value, "BorrowedAmount");
                ReportPropertyChanged("BorrowedAmount");
                OnBorrowedAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _BorrowedAmount;
        partial void OnBorrowedAmountChanging(Nullable<global::System.Int32> value);
        partial void OnBorrowedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Int32> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value, "LastModified");
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModified;
        partial void OnLastModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDEmployee
        {
            get
            {
                return _IDEmployee;
            }
            set
            {
                OnIDEmployeeChanging(value);
                ReportPropertyChanging("IDEmployee");
                _IDEmployee = StructuralObject.SetValidValue(value, "IDEmployee");
                ReportPropertyChanged("IDEmployee");
                OnIDEmployeeChanged();
            }
        }
        private Nullable<global::System.Int32> _IDEmployee;
        partial void OnIDEmployeeChanging(Nullable<global::System.Int32> value);
        partial void OnIDEmployeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_StockAmount_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_StockAmount_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_StockAmount_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("LibraryIMSModel.FK_StockAmount_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("LibraryIMSModel.FK_StockAmount_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_StockAmount_Publication", "Publication")]
        public Publication Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_StockAmount_Publication", "Publication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_StockAmount_Publication", "Publication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publication> PublicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("LibraryIMSModel.FK_StockAmount_Publication", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publication>("LibraryIMSModel.FK_StockAmount_Publication", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="Subcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subcategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subcategory object.
        /// </summary>
        /// <param name="iDSubcategory">Initial value of the IDSubcategory property.</param>
        public static Subcategory CreateSubcategory(global::System.Int32 iDSubcategory)
        {
            Subcategory subcategory = new Subcategory();
            subcategory.IDSubcategory = iDSubcategory;
            return subcategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSubcategory
        {
            get
            {
                return _IDSubcategory;
            }
            set
            {
                if (_IDSubcategory != value)
                {
                    OnIDSubcategoryChanging(value);
                    ReportPropertyChanging("IDSubcategory");
                    _IDSubcategory = StructuralObject.SetValidValue(value, "IDSubcategory");
                    ReportPropertyChanged("IDSubcategory");
                    OnIDSubcategoryChanged();
                }
            }
        }
        private global::System.Int32 _IDSubcategory;
        partial void OnIDSubcategoryChanging(global::System.Int32 value);
        partial void OnIDSubcategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Publication_Subcategory", "Publication")]
        public EntityCollection<Publication> Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Subcategory", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Publication>("LibraryIMSModel.FK_Publication_Subcategory", "Publication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibraryIMSModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        public static User CreateUser(global::System.Int32 iDUser)
        {
            User user = new User();
            user.IDUser = iDUser;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                if (_IDUser != value)
                {
                    OnIDUserChanging(value);
                    ReportPropertyChanging("IDUser");
                    _IDUser = StructuralObject.SetValidValue(value, "IDUser");
                    ReportPropertyChanged("IDUser");
                    OnIDUserChanged();
                }
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDGender
        {
            get
            {
                return _IDGender;
            }
            set
            {
                OnIDGenderChanging(value);
                ReportPropertyChanging("IDGender");
                _IDGender = StructuralObject.SetValidValue(value, "IDGender");
                ReportPropertyChanged("IDGender");
                OnIDGenderChanged();
            }
        }
        private Nullable<global::System.Int32> _IDGender;
        partial void OnIDGenderChanging(Nullable<global::System.Int32> value);
        partial void OnIDGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDContact
        {
            get
            {
                return _IDContact;
            }
            set
            {
                OnIDContactChanging(value);
                ReportPropertyChanging("IDContact");
                _IDContact = StructuralObject.SetValidValue(value, "IDContact");
                ReportPropertyChanged("IDContact");
                OnIDContactChanged();
            }
        }
        private Nullable<global::System.Int32> _IDContact;
        partial void OnIDContactChanging(Nullable<global::System.Int32> value);
        partial void OnIDContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDAddress
        {
            get
            {
                return _IDAddress;
            }
            set
            {
                OnIDAddressChanging(value);
                ReportPropertyChanging("IDAddress");
                _IDAddress = StructuralObject.SetValidValue(value, "IDAddress");
                ReportPropertyChanged("IDAddress");
                OnIDAddressChanged();
            }
        }
        private Nullable<global::System.Int32> _IDAddress;
        partial void OnIDAddressChanging(Nullable<global::System.Int32> value);
        partial void OnIDAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_User_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_User_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("LibraryIMSModel.FK_User_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("LibraryIMSModel.FK_User_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_Borrowing_User", "Borrowing")]
        public EntityCollection<Borrowing> Borrowing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_User", "Borrowing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Borrowing>("LibraryIMSModel.FK_Borrowing_User", "Borrowing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_User_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_User_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("LibraryIMSModel.FK_User_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("LibraryIMSModel.FK_User_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_User_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_User_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_User_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("LibraryIMSModel.FK_User_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("LibraryIMSModel.FK_User_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibraryIMSModel", "FK_OverdueCharge_User", "OverdueCharge")]
        public EntityCollection<OverdueCharge> OverdueCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_User", "OverdueCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OverdueCharge>("LibraryIMSModel.FK_OverdueCharge_User", "OverdueCharge", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
